// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User {
  Id        Int      @id @default(autoincrement())
  Name      String
  User_name String   @unique
  Email     String   @unique
  Password  String
  online    Boolean  @default(false)
  avatar    String 
  
  rooms     UserRooms[]  
  Messages  Messages[]

  
  contactsAdded     UserContacts[] @relation("ContactAdded")
  
  contactsOf        UserContacts[] @relation("UserContacts")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserContacts {
  Id        Int     @id @default(autoincrement())
  UserId    Int     
  ContactId Int     
  
  User      User    @relation("UserContacts", fields: [UserId], references: [Id])
  Contact   User    @relation("ContactAdded", fields: [ContactId], references: [Id])
  
  createdAt DateTime @default(now())
  
  @@unique([UserId, ContactId])
}

model Rooms {
  Id          Int      @id @default(autoincrement())
  Name        String
  Description String?
  CreatedAt   DateTime @default(now())
  UpdatedAt   DateTime @updatedAt
  
  
  Users       UserRooms[]
  Messages    Messages[]
}

model UserRooms {
  Id     Int @id @default(autoincrement())
  UserId Int
  RoomId Int
  
  User   User  @relation(fields: [UserId], references: [Id])
  Room   Rooms @relation(fields: [RoomId], references: [Id])
  
  joinedAt DateTime @default(now())
  
  @@unique([UserId, RoomId])
}

model Messages {
  Id        Int      @id @default(autoincrement())
  RoomId    Int
  UserId    Int
  Content   String
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt

  Room      Rooms    @relation(fields: [RoomId], references: [Id], onDelete: Cascade)
  User      User     @relation(fields: [UserId], references: [Id])
  
  @@index([RoomId, CreatedAt])
}